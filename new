<div class="container">

  <form #form="ngForm" name="regform" (ngSubmit)="onSubmit($event)">
      <hr>
     
    <div class="form-group">
      <label for="username">Username</label>
      <input type="text"  name="username" #username="ngModel"  id="username" 
      (ngModel)="username" class="form-control" required >
     <small class="text-danger" [class.d-none]="username.valid || username.untouched">username required</small>
     
  </div>
  <div class="form-group">
    <label for="email">Email</label>
    <input type="email"  name="email" #email="ngModel" id="email"  (ngModel)="email" class="form-control" required >
    <small class="text-danger" [class.d-none]="email.valid || email.untouched">email required</small>
</div>
<div class="form-group">
  <label for="password">Password</label>
  <input type="password" name="password" #password="ngModel" id="password"  (ngModel)="password" class="form-control" required >
  <small class="text-danger" [class.d-none]="password.valid || password.untouched">password required</small>
</div>
<div class="form-group">
    <label for="cnpassword">ConfirmPassword</label>
    <input type="password" name="cnpassword" #cnpassword="ngModel" id="cnpassword"    (ngModel)="cnpassword"  class="form-control" required>
    <small class="text-danger" [class.d-none]="cnpassword.valid || cnpassword.untouched">password required</small>
  </div>
<div class="form-group">
  <button [disabled]="loading" type="submit" id="submit" class="btn btn-primary">Register</button>
  <img *ngIf="loading" class="pl-3" >
  <a routerLink="/login" class="btn btn-link">Cancel</a>
</div>


  </form>

</div>

/////////


import { Component, OnInit } from '@angular/core';
import { register } from '../class/register';
import { FormGroup, FormControl,FormBuilder,Validator, Validators } from '@angular/forms';
import { ExamService } from '../exam.service';
import { UserService } from '../user.service';
import {Router} from '@angular/router';





@Component({
  selector: 'app-register',
  templateUrl: './register.component.html',
  styleUrls: ['./register.component.css']
})
export class RegisterComponent implements OnInit {

 

 
  constructor(private fb:FormBuilder,private user:UserService,private router:Router) { }
 

  ngOnInit() {
  }

  onSubmit(event) {
    event.preventDefault();
    const errors=[]
    const target=event.target
    const username=target.querySelector('#username').value;
    const email=target.querySelector ('#email').value;
    const password=target.querySelector('#password').value;
    const cnpassword=target.querySelector('#cnpassword').value;

    if(password!= cnpassword){
      errors.push("password not match")
      alert(errors[0]);
    }
    else{
      alert('registerd');
    }
    if(errors.length === 0){
      this.user.reguser(username,email,password).subscribe(
        data=>{console.log('sasas',data)
        if(data.success){
          this.router.navigate(['/drive'])
        }
       } );
    }
 console.log(username,email,password)


  }

}
////////////

import { Injectable } from '@angular/core';
import { HttpClient, HttpParams } from '@angular/common/http';

interface mydata{
  success:boolean,
  messege:string
}

interface register{
  success:boolean
}

@Injectable({
  providedIn: 'root'
})
export class UserService {



  private _url:string="http://localhost:3000"

  constructor(private http:HttpClient) { }

  reguser(username,email,password){

   return this.http.post<register>(this._url+'/reg',{username,email,password}
   );
  }

  getuser(username,password){
   
   
    return this.http.get<mydata>(this._url+'/login',{
      params: new HttpParams().set('uname',username).set('pass',password)
    })

  
}
}
